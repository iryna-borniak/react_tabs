{"version":3,"sources":["api/tabs.ts","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["tabs","id","title","content","Tabs","selectedTabId","onTabSelected","selectedTab","find","tab","className","map","classNames","href","onClick","selectTab","App","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"uKAAaA,EAAO,CAClB,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gB,uBCO7BC,EAAwB,SAAH,GAI3B,IAHLJ,EAAI,EAAJA,KACAK,EAAa,EAAbA,cACAC,EAAa,EAAbA,cAEMC,EAAcP,EAAKQ,MACvB,SAAAC,GAAG,OAAIA,EAAIR,KAAOI,MACfL,EAAK,GAKV,OACE,sBAAK,UAAQ,gBAAe,UAC1B,qBAAKU,UAAU,gBAAe,SAC5B,6BACGV,EAAKW,KAAI,SAACF,GAAG,OACZ,oBAEEC,UAAWE,IAAW,CACpB,YAAaH,EAAIR,KAAOM,EAAYN,KAEtC,UAAQ,MAAK,SAEb,mBACEY,KAAI,WAAMJ,EAAIR,IACd,UAAQ,UACRa,QAAS,kBAlBL,SAACL,GAAQ,OACzBF,EAAYN,KAAOQ,EAAIR,IAAMK,EAAcG,GAiBhBM,CAAUN,IAAK,SAE7BA,EAAIP,SAXFO,EAAIR,WAkBjB,qBAAKS,UAAU,QAAQ,UAAQ,aAAY,SACxCH,EAAYJ,cCxCRa,G,kBAAgB,WAC3B,MAAsCC,mBAASjB,EAAK,IAAG,mBAAhDO,EAAW,KAAEW,EAAc,KAElC,OACE,sBAAKR,UAAU,UAAS,UACtB,oBAAIA,UAAU,QAAO,mCACCH,EAAYL,SAGlC,cAAC,EAAI,CACHF,KAAMA,EACNK,cAAeE,EAAYN,GAC3BK,cAAeY,SChBvBC,IAASC,OAAO,cAAC,EAAG,IAAKC,SAASC,eAAe,W","file":"static/js/main.92c56352.chunk.js","sourcesContent":["export const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (arg0: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(\n    tab => tab.id === selectedTabId,\n  ) || tabs[0];\n\n  const selectTab = (tab: Tab) => (\n    selectedTab.id !== tab.id && onTabSelected(tab));\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              key={tab.id}\n              className={classNames({\n                'is-active': tab.id === selectedTab.id,\n              })}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => selectTab(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { tabs } from './api/tabs';\nimport { Tabs } from './components/Tabs';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={setSelectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}